package szengine

// ----------------------------------------------------------------------------
// Constants
// ----------------------------------------------------------------------------

// Log message prefix.
const Prefix = "szengine."

// ----------------------------------------------------------------------------
// Variables
// ----------------------------------------------------------------------------

// Message templates for szengine implementations.
var IDMessages = map[int]string{
	1:    "Enter " + Prefix + "AddRecord(%s, %s, %s, %d).",
	2:    "Exit  " + Prefix + "AddRecord(%s, %s, %s, %d) returned (%s, %v).",
	3:    "Enter " + Prefix + "ClearLastException().",
	4:    "Exit  " + Prefix + "ClearLastException() returned (%v).",
	5:    "Enter " + Prefix + "CloseExport(%v).",
	6:    "Exit  " + Prefix + "CloseExport(%v) returned (%v).",
	7:    "Enter " + Prefix + "CountRedoRecords().",
	8:    "Exit  " + Prefix + "CountRedoRecords() returned (%d, %v).",
	9:    "Enter " + Prefix + "DeleteRecord(%s, %s, %d).",
	10:   "Exit  " + Prefix + "DeleteRecord(%s, %s, %d) returned (%s, %v).",
	11:   "Enter " + Prefix + "Destroy().",
	12:   "Exit  " + Prefix + "Destroy() returned (%v).",
	13:   "Enter " + Prefix + "ExportCsvEntityReport(%s, %d).",
	14:   "Exit  " + Prefix + "ExportCsvEntityReport(%s, %d) returned (%v, %v).",
	15:   "Enter " + Prefix + "ExportCsvEntityReportIterator(%s, %d).",
	16:   "Exit  " + Prefix + "ExportCsvEntityReportIterator(%s, %d) returned (%v).",
	17:   "Enter " + Prefix + "ExportJSONEntityReport(%d).",
	18:   "Exit  " + Prefix + "ExportJSONEntityReport(%d) returned (%v, %v).",
	19:   "Enter " + Prefix + "ExportJSONEntityReportIterator(%d).",
	20:   "Exit  " + Prefix + "ExportJSONEntityReportIterator(%d) returned (%v).",
	21:   "Enter " + Prefix + "FetchNext(%v).",
	22:   "Exit  " + Prefix + "FetchNext(%v) returned (%s, %v).",
	23:   "Enter " + Prefix + "FindInterestingEntitiesByEntityID(%s, %d).",
	24:   "Exit  " + Prefix + "FindInterestingEntitiesByEntityID(%s, %d) returned (%s, %v).",
	25:   "Enter " + Prefix + "FindInterestingEntitiesByRecordID(%s, %s, %d).",
	26:   "Exit  " + Prefix + "FindInterestingEntitiesByRecordID(%s, %s, %d) returned (%s, %v).",
	27:   "Enter " + Prefix + "FindNetworkByEntityID(%s, %d, %d, %d, %d).",
	28:   "Exit  " + Prefix + "FindNetworkByEntityID(%s, %d, %d, %d, %d) returned (%s, %v).",
	29:   "Enter " + Prefix + "FindNetworkByRecordID(%s, %d, %d, %d, %d).",
	30:   "Exit  " + Prefix + "FindNetworkByRecordID(%s, %d, %d, %d, %d) returned (%s, %v).",
	31:   "Enter " + Prefix + "FindPathByEntityID(%d, %d, %d, %s, %s, %d).",
	32:   "Exit  " + Prefix + "FindPathByEntityID(%d, %d, %d, %s, %s, %d) returned (%s, %v).",
	33:   "Enter " + Prefix + "FindPathByRecordID(%s, %s, %s, %s, %d, %s, %s, %d).",
	34:   "Exit  " + Prefix + "FindPathByRecordID(%s, %s, %s, %s, %d, %s, %s, %d) returned (%s, %v).",
	35:   "Enter " + Prefix + "GetActiveConfigID().",
	36:   "Exit  " + Prefix + "GetActiveConfigID() returned (%d, %v).",
	37:   "Enter " + Prefix + "GetEntityByEntityID(%d, %d).",
	38:   "Exit  " + Prefix + "GetEntityByEntityID(%d, %d) returned (%s, %v).",
	39:   "Enter " + Prefix + "GetEntityByRecordID(%s, %s, %d).",
	40:   "Exit  " + Prefix + "GetEntityByRecordID(%s, %s, %d) returned (%s, %v).",
	41:   "Enter " + Prefix + "GetLastException().",
	42:   "Exit  " + Prefix + "GetLastException() returned (%s, %v).",
	43:   "Enter " + Prefix + "GetLastExceptionCode().",
	44:   "Exit  " + Prefix + "GetLastExceptionCode() returned (%d, %v).",
	45:   "Enter " + Prefix + "GetRecord(%s, %s, %d).",
	46:   "Exit  " + Prefix + "GetRecord(%s, %s, %d) returned (%s, %v).",
	47:   "Enter " + Prefix + "GetRedoRecord().",
	48:   "Exit  " + Prefix + "GetRedoRecord() returned (%s, %v).",
	49:   "Enter " + Prefix + "GetStats().",
	50:   "Exit  " + Prefix + "GetStats() returned (%s, %v).",
	51:   "Enter " + Prefix + "GetVirtualEntityByRecordID(%s, %d).",
	52:   "Exit  " + Prefix + "GetVirtualEntityByRecordID(%s, %d) returned (%s, %v).",
	53:   "Enter " + Prefix + "HowEntityByEntityID(%d, %d).",
	54:   "Exit  " + Prefix + "HowEntityByEntityID(%d, %d) returned (%s, %v).",
	55:   "Enter " + Prefix + "Initialize(%s, %s, %d, %d).",
	56:   "Exit  " + Prefix + "Initialize(%s, %s, %d, %d) returned (%v).",
	57:   "Enter " + Prefix + "PrimeEngine().",
	58:   "Exit  " + Prefix + "PrimeEngine() returned (%v).",
	59:   "Enter " + Prefix + "ProcessRedoRecord(%s, %d).",
	60:   "Exit  " + Prefix + "ProcessRedoRecord(%s, %d) returned (%s, %v).",
	61:   "Enter " + Prefix + "ReevaluateEntity(%d, %d).",
	62:   "Exit  " + Prefix + "ReevaluateEntity(%d, %d) returned (%s, %v).",
	63:   "Enter " + Prefix + "ReevaluateRecord(%s, %s, %d).",
	64:   "Exit  " + Prefix + "ReevaluateRecord(%s, %s, %d) returned (%s, %v).",
	65:   "Enter " + Prefix + "Reinitialize(%d).",
	66:   "Exit  " + Prefix + "Reinitialize(%d) returned (%v).",
	69:   "Enter " + Prefix + "SearchByAttributes(%s, %s, %d).",
	70:   "Exit  " + Prefix + "SearchByAttributes(%s, %s, %d) returned (%s, %v).",
	71:   "Enter " + Prefix + "WhyEntities(%d, %d, %d).",
	72:   "Exit  " + Prefix + "WhyEntities(%d, %d, %d) returned (%s, %v).",
	73:   "Enter " + Prefix + "WhyRecordInEntity(%s, %s, %d).",
	74:   "Exit  " + Prefix + "WhyRecordInEntity(%s, %s, %d) returned (%s, %v).",
	75:   "Enter " + Prefix + "WhyRecords(%s, %s, %s, %s, %d).",
	76:   "Exit  " + Prefix + "WhyRecords(%s, %s, %s, %s, %d) returned (%s, %v).",
	77:   "Enter " + Prefix + "PreprocessRecord(%s, %d).",
	78:   "Exit  " + Prefix + "PreprocessRecord(%s, %d) returned (%s, %v).",
	79:   "Enter " + Prefix + "WhySearch(%s, %d, %s, %d).",
	80:   "Exit  " + Prefix + "WhySearch(%s, %d, %s, %d) returned (%s, %v).",
	703:  "Enter " + Prefix + "RegisterObserver(%s).",
	704:  "Exit  " + Prefix + "RegisterObserver(%s) returned (%v).",
	705:  "Enter " + Prefix + "SetLogLevel(%s).",
	706:  "Exit  " + Prefix + "SetLogLevel(%s) returned (%v).",
	707:  "Enter " + Prefix + "UnregisterObserver(%s).",
	708:  "Exit  " + Prefix + "UnregisterObserver(%s) returned (%v).",
	4001: Prefix + "Sz_addRecord(%s, %s, %s) failed. Return code: %d",
	4002: Prefix + "Sz_addRecordWithInfo(%s, %s, %s, %d) failed. Return code: %d",
	4003: Prefix + "Sz_closeExport(%v) failed. Return code: %d",
	4004: Prefix + "Sz_deleteRecord(%s, %s) failed. Return code: %d",
	4005: Prefix + "Sz_deleteRecordWithInfo(%s, %s, %d) failed. Return code: %d",
	4006: Prefix + "Sz_destroy() failed. Return code: %d",
	4007: Prefix + "Sz_exportCSVEntityReport(%s, %d) failed. Return code: %d",
	4008: Prefix + "Sz_exportJSONEntityReport(%d) failed. Return code: %d",
	4009: Prefix + "Sz_fetchNext(%v) failed. Return code: %d",
	4010: Prefix + "Sz_findInterestingEntitiesByEntityID(%d, %d) failed. Return code: %d",
	4011: Prefix + "Sz_findInterestingEntitiesByRecordID(%s, %s, %d) failed. Return code: %d",
	4012: Prefix + "Sz_findNetworkByEntityID(%s, %d, %d, %d) failed. Return code: %d",
	4013: Prefix + "Sz_findNetworkByEntityID_V2(%s, %d, %d, %d, %d) failed. Return code: %d",
	4014: Prefix + "Sz_findNetworkByRecordID(%s, %d, %d, %d) failed. Return code: %d",
	4015: Prefix + "Sz_findNetworkByRecordID_V2(%s, %d, %d, %d, %d) failed. Return code: %d",
	4016: Prefix + "Sz_findPathByEntityID(%d, %d, %d) failed. Return code: %d",
	4017: Prefix + "Sz_findPathByEntityID_V2(%d, %d, %d, %d) failed. Return code: %d",
	4018: Prefix + "Sz_findPathByRecordID(%s, %s, %s, %s, %d) failed. Return code: %d",
	4019: Prefix + "Sz_findPathByRecordID_V2(%s, %s, %s, %s, %d, %d) failed. Return code: %d",
	4020: Prefix + "Sz_findPathExcludingByEntityID(%d, %d, %d, %s) failed. Return code: %d",
	4021: Prefix + "Sz_findPathExcludingByEntityID_V2(%d, %d, %d, %s, %d) failed. Return code: %d",
	4022: Prefix + "Sz_findPathExcludingByRecordID(%s, %s, %s, %s %d, %s) failed. Return code: %d",
	4023: Prefix + "Sz_findPathExcludingByRecordID_V2(%s, %s, %s, %s %d, %s, %d) failed. Return code: %d",
	4024: Prefix + "Sz_findPathIncludingSourceByEntityID(%d, %d, %d, %s, %s) failed. Return code: %d",
	4025: Prefix + "Sz_findPathIncludingSourceByEntityID_V2(%d, %d, %d, %s, %s, %d) failed. Return code: %d",
	4026: Prefix + "Sz_findPathIncludingSourceByRecordID(%s, %s, %s, %s, %d, %s, %s) failed. Return code: %d",
	4027: Prefix + "Sz_findPathIncludingSourceByRecordID_V2(%s, %s, %s, %s, %d, %s, %s, %d) failed. Return code: %d",
	4028: Prefix + "Sz_getActiveConfigID() failed. Return code: %d",
	4029: Prefix + "Sz_getEntityByEntityID(%d) failed. Return code: %d",
	4030: Prefix + "Sz_getEntityByEntityID_V2(%d, %d) failed. Return code: %d",
	4031: Prefix + "Sz_getEntityByRecordID(%s, %s) failed. Return code: %d",
	4032: Prefix + "Sz_getEntityByRecordID_V2(%s, %s, %d) failed. Return code: %d",
	4033: Prefix + "Sz_getLastException() failed. Return code: %d",
	4034: Prefix + "Sz_getRecord(%s, %s) failed. Return code: %d",
	4035: Prefix + "Sz_getRecord_V2(%s, %s, %d) failed. Return code: %d",
	4036: Prefix + "Sz_getRedoRecord() failed. Return code: %d",
	4037: Prefix + "Sz_getVirtualEntityByRecordID(%s) failed. Return code: %d",
	4038: Prefix + "Sz_getVirtualEntityByRecordID_V2(%s, %d) failed. Return code: %d",
	4039: Prefix + "Sz_howEntityByEntityID(%d) failed. Return code: %d",
	4040: Prefix + "Sz_howEntityByEntityID_V2(%d, %d) failed. Return code: %d",
	4041: Prefix + "Sz_init(%s, %s, %d) failed. Return code: %d",
	4042: Prefix + "Sz_initWithConfigID(%s, %s, %d, %d) failed. Return code: %d",
	4043: Prefix + "Sz_primeEngine() failed. Return code: %d",
	4044: Prefix + "Sz_processRedoRecord(%s) failed. Return code: %d",
	4045: Prefix + "Sz_processRedoRecordWithInfo(%s) failed. Return code: %d",
	4046: Prefix + "Sz_reevaluateEntity(%d, %d) failed. Return code: %d",
	4047: Prefix + "Sz_reevaluateEntityWithInfo(%d, %d) failed. Return code: %d",
	4048: Prefix + "Sz_reevaluateRecord(%s, %s, %d) failed. Return code: %d",
	4049: Prefix + "Sz_reevaluateRecordWithInfo(%s, %s, %d) failed. Return code: %d",
	4050: Prefix + "Sz_reinit(%d) failed. Return code: %d",
	4051: Prefix + "Sz_searchByAttributes(%s) failed. Return code: %d",
	4052: Prefix + "Sz_searchByAttributes_V2(%s, %d) failed. Return code: %d",
	4053: Prefix + "Sz_searchByAttributes_V3(%s, %s, %d) failed. Return code: %d",
	4054: Prefix + "Sz_stats() failed. Return code: %d",
	4055: Prefix + "Sz_whyEntities(%d, %d) failed. Return code: %d",
	4056: Prefix + "Sz_whyEntities_V2(%d, %d, %d) failed. Return code: %d",
	4057: Prefix + "Sz_whyRecordInEntity(%s, %s) failed. Return code: %d",
	4058: Prefix + "Sz_whyRecordInEntity_V2(%s, %s, %d) failed. Return code: %d",
	4059: Prefix + "Sz_whyRecords(%s, %s, %s, %s) failed. Return code: %d",
	4060: Prefix + "Sz_whyRecords_V2(%s, %s, %s, %s, %d) failed. Return code: %d",
	4061: Prefix + "Sz_preprocessRecord(%s, %d) failed. Return code: %d",
	8001: Prefix + "AddRecord",
	8002: Prefix + "CloseExport",
	8003: Prefix + "CountRedoRecords",
	8004: Prefix + "DeleteRecord",
	8005: Prefix + "Destroy",
	8006: Prefix + "ExportCSVEntityReport",
	8007: Prefix + "ExportCSVEntityReportIterator",
	8008: Prefix + "ExportJSONEntityReport",
	8009: Prefix + "ExportJSONEntityReportIterator",
	8010: Prefix + "FetchNext",
	8011: Prefix + "FindInterestingEntitiesByEntityID",
	8012: Prefix + "FindInterestingEntitiesByRecordID",
	8013: Prefix + "FindNetworkByEntityID",
	8014: Prefix + "FindNetworkByRecordID",
	8015: Prefix + "FindPathByEntityID",
	8016: Prefix + "FindPathByRecordID",
	8017: Prefix + "GetActiveConfigID",
	8018: Prefix + "GetEntityByEntityID",
	8019: Prefix + "GetEntityByRecordID",
	8020: Prefix + "GetRecord",
	8021: Prefix + "GetRedoRecord",
	8022: Prefix + "GetStats",
	8023: Prefix + "GetVirtualEntityByRecordID",
	8024: Prefix + "HowEntityByEntityID",
	8025: Prefix + "Initialize",
	8026: Prefix + "PrimeEngine",
	8027: Prefix + "ProcessRedoRecord",
	8028: Prefix + "ReevaluateEntity",
	8029: Prefix + "ReevaluateRecord",
	8030: Prefix + "Reinitialize",
	8031: Prefix + "SearchByAttributes",
	8032: Prefix + "WhyEntities",
	8033: Prefix + "WhyRecordInEntity",
	8034: Prefix + "WhyRecords",
	8035: Prefix + "PreprocessRecord",
	8702: Prefix + "RegisterObserver",
	8703: Prefix + "SetLogLevel",
	8704: Prefix + "UnregisterObserver",
}

// Status strings for specific szengine messages.
var IDStatuses = map[int]string{}
